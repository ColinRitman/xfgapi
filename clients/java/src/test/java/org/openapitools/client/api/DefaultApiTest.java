/*
 * Elderfire API Gateway
 * REST API over Fuego Wallet RPC
 *
 * The version of the OpenAPI document: 1.0.0
 * 
 *
 * NOTE: This class is auto generated by OpenAPI Generator (https://openapi-generator.tech).
 * https://openapi-generator.tech
 * Do not edit the class manually.
 */


package org.openapitools.client.api;

import org.openapitools.client.ApiException;
import org.openapitools.client.model.WalletTransferPostRequest;
import org.junit.jupiter.api.Disabled;
import org.junit.jupiter.api.Test;

import java.util.ArrayList;
import java.util.HashMap;
import java.util.List;
import java.util.Map;

/**
 * API tests for DefaultApi
 */
@Disabled
public class DefaultApiTest {

    private final DefaultApi api = new DefaultApi();

    /**
     * Well check
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void healthGetTest() throws ApiException {
        api.healthGet();
        // TODO: test validations
    }

    /**
     * Get block header by height (json_rpc getblockheaderbyheight)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nodeBlockHeaderByHeightHeightGetTest() throws ApiException {
        Integer height = null;
        api.nodeBlockHeaderByHeightHeightGet(height);
        // TODO: test validations
    }

    /**
     * Get block count (json_rpc getblockcount)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nodeBlockcountGetTest() throws ApiException {
        api.nodeBlockcountGet();
        // TODO: test validations
    }

    /**
     * Get node height (maps to /getheight)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nodeHeightGetTest() throws ApiException {
        api.nodeHeightGet();
        // TODO: test validations
    }

    /**
     * Get node info (maps to /getinfo)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nodeInfoGetTest() throws ApiException {
        api.nodeInfoGet();
        // TODO: test validations
    }

    /**
     * Get last block header (json_rpc getlastblockheader)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void nodeLastBlockHeaderGetTest() throws ApiException {
        api.nodeLastBlockHeaderGet();
        // TODO: test validations
    }

    /**
     * Get wallet balance (wallet getbalance)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletBalanceGetTest() throws ApiException {
        api.walletBalanceGet();
        // TODO: test validations
    }

    /**
     * Get wallet height (wallet get_height)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletHeightGetTest() throws ApiException {
        api.walletHeightGet();
        // TODO: test validations
    }

    /**
     * Optimize wallet (wallet optimize)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletOptimizePostTest() throws ApiException {
        Object body = null;
        api.walletOptimizePost(body);
        // TODO: test validations
    }

    /**
     * Send transfer (wallet transfer)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletTransferPostTest() throws ApiException {
        WalletTransferPostRequest walletTransferPostRequest = null;
        api.walletTransferPost(walletTransferPostRequest);
        // TODO: test validations
    }

    /**
     * Get transfers (wallet get_transfers)
     *
     * @throws ApiException if the Api call fails
     */
    @Test
    public void walletTransfersPostTest() throws ApiException {
        Object body = null;
        api.walletTransfersPost(body);
        // TODO: test validations
    }

}
