/*
Elderfire API Gateway

REST API over Fuego Wallet RPC

API version: 1.0.0
*/

// Code generated by OpenAPI Generator (https://openapi-generator.tech); DO NOT EDIT.

package openapi

import (
	"encoding/json"
)

// checks if the WalletTransferPostRequest type satisfies the MappedNullable interface at compile time
var _ MappedNullable = &WalletTransferPostRequest{}

// WalletTransferPostRequest struct for WalletTransferPostRequest
type WalletTransferPostRequest struct {
	Destinations []WalletTransferPostRequestDestinationsInner `json:"destinations,omitempty"`
	PaymentId *string `json:"payment_id,omitempty"`
	Mixin *int32 `json:"mixin,omitempty"`
	UnlockTime *int32 `json:"unlock_time,omitempty"`
	Messages []WalletTransferPostRequestMessagesInner `json:"messages,omitempty"`
	Ttl *int32 `json:"ttl,omitempty"`
}

// NewWalletTransferPostRequest instantiates a new WalletTransferPostRequest object
// This constructor will assign default values to properties that have it defined,
// and makes sure properties required by API are set, but the set of arguments
// will change when the set of required properties is changed
func NewWalletTransferPostRequest() *WalletTransferPostRequest {
	this := WalletTransferPostRequest{}
	return &this
}

// NewWalletTransferPostRequestWithDefaults instantiates a new WalletTransferPostRequest object
// This constructor will only assign default values to properties that have it defined,
// but it doesn't guarantee that properties required by API are set
func NewWalletTransferPostRequestWithDefaults() *WalletTransferPostRequest {
	this := WalletTransferPostRequest{}
	return &this
}

// GetDestinations returns the Destinations field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetDestinations() []WalletTransferPostRequestDestinationsInner {
	if o == nil || IsNil(o.Destinations) {
		var ret []WalletTransferPostRequestDestinationsInner
		return ret
	}
	return o.Destinations
}

// GetDestinationsOk returns a tuple with the Destinations field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetDestinationsOk() ([]WalletTransferPostRequestDestinationsInner, bool) {
	if o == nil || IsNil(o.Destinations) {
		return nil, false
	}
	return o.Destinations, true
}

// HasDestinations returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasDestinations() bool {
	if o != nil && !IsNil(o.Destinations) {
		return true
	}

	return false
}

// SetDestinations gets a reference to the given []WalletTransferPostRequestDestinationsInner and assigns it to the Destinations field.
func (o *WalletTransferPostRequest) SetDestinations(v []WalletTransferPostRequestDestinationsInner) {
	o.Destinations = v
}

// GetPaymentId returns the PaymentId field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetPaymentId() string {
	if o == nil || IsNil(o.PaymentId) {
		var ret string
		return ret
	}
	return *o.PaymentId
}

// GetPaymentIdOk returns a tuple with the PaymentId field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetPaymentIdOk() (*string, bool) {
	if o == nil || IsNil(o.PaymentId) {
		return nil, false
	}
	return o.PaymentId, true
}

// HasPaymentId returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasPaymentId() bool {
	if o != nil && !IsNil(o.PaymentId) {
		return true
	}

	return false
}

// SetPaymentId gets a reference to the given string and assigns it to the PaymentId field.
func (o *WalletTransferPostRequest) SetPaymentId(v string) {
	o.PaymentId = &v
}

// GetMixin returns the Mixin field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetMixin() int32 {
	if o == nil || IsNil(o.Mixin) {
		var ret int32
		return ret
	}
	return *o.Mixin
}

// GetMixinOk returns a tuple with the Mixin field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetMixinOk() (*int32, bool) {
	if o == nil || IsNil(o.Mixin) {
		return nil, false
	}
	return o.Mixin, true
}

// HasMixin returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasMixin() bool {
	if o != nil && !IsNil(o.Mixin) {
		return true
	}

	return false
}

// SetMixin gets a reference to the given int32 and assigns it to the Mixin field.
func (o *WalletTransferPostRequest) SetMixin(v int32) {
	o.Mixin = &v
}

// GetUnlockTime returns the UnlockTime field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetUnlockTime() int32 {
	if o == nil || IsNil(o.UnlockTime) {
		var ret int32
		return ret
	}
	return *o.UnlockTime
}

// GetUnlockTimeOk returns a tuple with the UnlockTime field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetUnlockTimeOk() (*int32, bool) {
	if o == nil || IsNil(o.UnlockTime) {
		return nil, false
	}
	return o.UnlockTime, true
}

// HasUnlockTime returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasUnlockTime() bool {
	if o != nil && !IsNil(o.UnlockTime) {
		return true
	}

	return false
}

// SetUnlockTime gets a reference to the given int32 and assigns it to the UnlockTime field.
func (o *WalletTransferPostRequest) SetUnlockTime(v int32) {
	o.UnlockTime = &v
}

// GetMessages returns the Messages field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetMessages() []WalletTransferPostRequestMessagesInner {
	if o == nil || IsNil(o.Messages) {
		var ret []WalletTransferPostRequestMessagesInner
		return ret
	}
	return o.Messages
}

// GetMessagesOk returns a tuple with the Messages field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetMessagesOk() ([]WalletTransferPostRequestMessagesInner, bool) {
	if o == nil || IsNil(o.Messages) {
		return nil, false
	}
	return o.Messages, true
}

// HasMessages returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasMessages() bool {
	if o != nil && !IsNil(o.Messages) {
		return true
	}

	return false
}

// SetMessages gets a reference to the given []WalletTransferPostRequestMessagesInner and assigns it to the Messages field.
func (o *WalletTransferPostRequest) SetMessages(v []WalletTransferPostRequestMessagesInner) {
	o.Messages = v
}

// GetTtl returns the Ttl field value if set, zero value otherwise.
func (o *WalletTransferPostRequest) GetTtl() int32 {
	if o == nil || IsNil(o.Ttl) {
		var ret int32
		return ret
	}
	return *o.Ttl
}

// GetTtlOk returns a tuple with the Ttl field value if set, nil otherwise
// and a boolean to check if the value has been set.
func (o *WalletTransferPostRequest) GetTtlOk() (*int32, bool) {
	if o == nil || IsNil(o.Ttl) {
		return nil, false
	}
	return o.Ttl, true
}

// HasTtl returns a boolean if a field has been set.
func (o *WalletTransferPostRequest) HasTtl() bool {
	if o != nil && !IsNil(o.Ttl) {
		return true
	}

	return false
}

// SetTtl gets a reference to the given int32 and assigns it to the Ttl field.
func (o *WalletTransferPostRequest) SetTtl(v int32) {
	o.Ttl = &v
}

func (o WalletTransferPostRequest) MarshalJSON() ([]byte, error) {
	toSerialize,err := o.ToMap()
	if err != nil {
		return []byte{}, err
	}
	return json.Marshal(toSerialize)
}

func (o WalletTransferPostRequest) ToMap() (map[string]interface{}, error) {
	toSerialize := map[string]interface{}{}
	if !IsNil(o.Destinations) {
		toSerialize["destinations"] = o.Destinations
	}
	if !IsNil(o.PaymentId) {
		toSerialize["payment_id"] = o.PaymentId
	}
	if !IsNil(o.Mixin) {
		toSerialize["mixin"] = o.Mixin
	}
	if !IsNil(o.UnlockTime) {
		toSerialize["unlock_time"] = o.UnlockTime
	}
	if !IsNil(o.Messages) {
		toSerialize["messages"] = o.Messages
	}
	if !IsNil(o.Ttl) {
		toSerialize["ttl"] = o.Ttl
	}
	return toSerialize, nil
}

type NullableWalletTransferPostRequest struct {
	value *WalletTransferPostRequest
	isSet bool
}

func (v NullableWalletTransferPostRequest) Get() *WalletTransferPostRequest {
	return v.value
}

func (v *NullableWalletTransferPostRequest) Set(val *WalletTransferPostRequest) {
	v.value = val
	v.isSet = true
}

func (v NullableWalletTransferPostRequest) IsSet() bool {
	return v.isSet
}

func (v *NullableWalletTransferPostRequest) Unset() {
	v.value = nil
	v.isSet = false
}

func NewNullableWalletTransferPostRequest(val *WalletTransferPostRequest) *NullableWalletTransferPostRequest {
	return &NullableWalletTransferPostRequest{value: val, isSet: true}
}

func (v NullableWalletTransferPostRequest) MarshalJSON() ([]byte, error) {
	return json.Marshal(v.value)
}

func (v *NullableWalletTransferPostRequest) UnmarshalJSON(src []byte) error {
	v.isSet = true
	return json.Unmarshal(src, &v.value)
}


